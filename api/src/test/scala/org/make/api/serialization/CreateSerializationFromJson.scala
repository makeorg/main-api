package org.make.api.serialization

import java.nio.file.{Files, Paths, StandardOpenOption}
import java.util.Base64

object CreateSerializationFromJson extends App {

  val json =
    """
      |{"events":[{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"sequence-proposal-added","arguments":{"id":"sequence-id","eventDate":"2018-03-01T16:09:30.441Z","proposalIds":["proposalId"],"requestContext":{"requestId":"","sessionId":"","externalId":""},"userId":"my-user-id"}},"type":"LogUserAddProposalsSequenceEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"unvote","arguments":{"proposalId":"proposal-id","voteKey":"neutral"}},"type":"LogUserUnvoteEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"start-sequence","arguments":{"slug":"vff","sequenceId":"vff"}},"type":"LogUserStartSequenceEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"search","arguments":{"term":"il faut caliner les cacahuettes"}},"type":"LogUserSearchProposalsEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"proposal-accepted","arguments":{"moderator":"my-user-id","sendValidationEmail":false,"tags":["police","justice"],"idea":"my-idea","similarProposals":["proposal1","proposal2"],"id":"proposal-id","operation":"my-operation","labels":["label"],"eventDate":"2018-03-01T16:09:30.441Z","requestContext":{"requestId":"","sessionId":"","externalId":""},"theme":"123-456-789"}},"type":"LogAcceptProposalEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"qualify","arguments":{"proposalId":"proposal-id","qualificationKey":"doable"}},"type":"LogUserQualificationEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"proposal-postponed","arguments":{"id":"proposal-id","eventDate":"2018-03-01T16:09:30.441Z","requestContext":{"requestId":"","sessionId":"","externalId":""},"moderator":"my-user-id"}},"type":"LogPostponeProposalEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"sequence-proposal-added","arguments":{"id":"sequence-id","eventDate":"2018-03-01T16:09:30.441Z","proposalIds":["proposal-1","proposal-2"],"requestContext":{"requestId":"","sessionId":"","externalId":""},"userId":"my-user-id"}},"type":"LogUserRemoveProposalsSequenceEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"search-sequence","arguments":{"query":{"sorts":[]}}},"type":"LogUserSearchSequencesEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"vote","arguments":{"proposalId":"proposalId","voteKey":"neutral"}},"type":"LogUserVoteEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"duplicates","arguments":"proposal-id"},"type":"LogGetProposalDuplicatesEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"proposal-refused","arguments":{"moderator":"my-user-id","sendRefuseEmail":false,"refusalReason":"because","id":"proposal-id","operation":"operation-id","eventDate":"2018-03-01T16:09:30.441Z","requestContext":{"requestId":"","sessionId":"","externalId":""}}},"type":"LogRefuseProposalEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"unqualify","arguments":{"proposalId":"proposal-id","qualificationKey":"likeIt"}},"type":"LogUserUnqualificationEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"propose","arguments":{"content":"il faut proposer","theme":"my-theme"}},"type":"LogUserProposalEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"sequence-updated","arguments":{"operationId":"operation-id","tagIds":["kitten"],"id":"sequence-id","operation":"my-operation-slug","themeIds":["theme-1","theme2"],"eventDate":"2018-03-01T16:09:30.441Z","status":"Published","requestContext":{"requestId":"","sessionId":"","externalId":""},"userId":"my-user-id","title":"sequence title"}},"type":"LogUserUpdateSequenceEvent"},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"register","arguments":{"email":"me@make.org","dateOfBirth":"1970-01-01","postalCode":"75011","lastName":"myself","firstName":"me","profession":"doer"}},"type":"LogRegisterCitizenEvent"},{"context":{"requestId":"","sessionId":"","externalId":""},"moderatorName":"moderator name","userId":"my-user-id","type":"LogLockProposalEvent","action":{"date":"2018-03-01T16:09:30.441Z","actionType":"proposal-locked","arguments":{"moderatorName":"moderator name","moderatorId":"my-user-id","id":"proposal-id","eventDate":"2018-03-01T16:09:30.441Z","requestContext":{"requestId":"","sessionId":"","externalId":""}}}},{"userId":"my-user-id","context":{"requestId":"","sessionId":"","externalId":""},"action":{"date":"2018-03-01T16:09:30.441Z","actionType":"sequence-created","arguments":{"slug":"my-sequence","operationId":"operation-id","tagIds":["tag-1","tag-2"],"searchable":true,"id":"sequence-id","themeIds":["theme-1","theme-2"],"eventDate":"2018-03-01T16:09:30.441Z","requestContext":{"requestId":"","sessionId":"","externalId":""},"userId":"my-user-id","title":"my sequence"}},"type":"LogUserCreateSequenceEvent"}]}
    """.stripMargin

  val data = Base64.getEncoder.encode(json.getBytes("UTF-8"))
  val destination =
    Paths.get("/home/francois/dev/make/make-api/api/src/test/resources/serialization/user-history-v1-default")

  Files.write(destination, data, StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING)

}
