akka {

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {

    role {
      seed {
        min-nr-of-members = 1
      }
      worker {
        min-nr-of-members = 1
      }
    }

    seed-nodes = ["akka.tcp://make-api@127.0.0.1:2551"]

    roles = ["seed", "worker"]

    sharding {
      guardian-name = sharding
      remember-entities = on
      state-store-mode = persistence
      role = "worker"

      snapshot-plugin-id = "cassandra-snapshot-store"
      journal-plugin-id = "cassandra-journal"
    }
  }

  persistence {
    journal {
      plugin = cassandra-journal
    }
    snapshot-store {
      plugin = cassandra-snapshot-store
    }
    role = "worker"
  }
}

make-api {

  passivate-timeout = "2 minutes"

  http {
    host = "0.0.0.0"
    host = ${?HOST}
    port = 9000
    port = ${?PORT}
  }

  dev {
    embedded-elasticsearch = true
    send-test-data = true
    auto-create-db-schemas = true
  }

  kafka {
    connection-string = "localhost:9092"
    connection-string = ${?KAFKA_URI}
    poll-timeout = 10000
    schema-registry = "http://localhost:18081"
    schema-registry = ${?AVRO_REGISTRY_URL}
    topics {
      citizens = "citizens"
      propositions = "propositions"
      votes = "votes"
    }
  }

  elasticSearch {
    host = "localhost"
    port = 9200
  }

  database {
    jdbc-url = "jdbc:postgresql://localhost:26257/makeapi"
    jdbc-url = ${?JDBC_URL}
    user = "root"
    password = ""
    pools {
      read {
        connections = 50
      }
      write {
        connections = 20
      }
    }
  }
}
